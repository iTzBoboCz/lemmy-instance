version: "3.3"

networks:
  # communication to web and clients
  lemmyexternalproxy:
  # communication between lemmy services
  lemmyinternal:
    driver: bridge
    internal: true

services:
  lemmy:
    image: dessalines/lemmy:0.17.3
    container_name: lemmy
    hostname: lemmy
    networks:
      - lemmyinternal
    environment:
      - RUST_LOG="warn,lemmy_server=info,lemmy_api=info,lemmy_api_common=info,lemmy_api_crud=info,lemmy_apub=info,lemmy_db_schema=info,lemmy_db_views=info,lemmy_db_views_actor=info,lemmy_db_views_moderator=info,lemmy_routes=info,lemmy_utils=info,lemmy_websocket=info"
    volumes:
      - ./docker/lemmy/lemmy.hjson:/config/config.hjson
    depends_on:
      - postgres
      - pictrs
    restart: unless-stopped

  lemmy-ui:
    image: dessalines/lemmy-ui:0.17.3
    container_name: lemmy-ui
    networks:
      - lemmyinternal
    environment:
      # this needs to match the hostname defined in the lemmy service
      - LEMMY_UI_LEMMY_INTERNAL_HOST=lemmy:8536
      # set the outside hostname here
      - LEMMY_UI_LEMMY_EXTERNAL_HOST=localhost:1236
      - LEMMY_HTTPS=true
    depends_on:
      - lemmy
    restart: unless-stopped

  pictrs:
    image: asonix/pictrs:0.3.1
    container_name: pictrs
    # this needs to match the pictrs url in lemmy.hjson
    hostname: pictrs
    # we can set options to pictrs like this, here we set max. image size and forced format for conversion
    # entrypoint: /sbin/tini -- /usr/local/bin/pict-rs -p /mnt -m 4 --image-format webp
    networks:
      - lemmyinternal
    environment:
      - PICTRS__API_KEY=API_KEY
    user: 991:991
    volumes:
      - ./docker/pictrs:/mnt
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    # this needs to match the database host in lemmy.hson
    hostname: postgres
    networks:
      - lemmyinternal
    environment:
      - POSTGRES_USER=lemmy
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=lemmy
    volumes:
      - ./docker/postgres:/var/lib/postgresql/data
    restart: unless-stopped

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager
    container_name: nginx-proxy-manager
    networks:
      - lemmyinternal
      - lemmyexternalproxy
    volumes:
      - ./docker/NginxProxyManager/data:/data
      - ./docker/NginxProxyManager/data/letsencrypt:/etc/letsencrypt
    ports:
      - 80:80
      - 81:81
      - 443:443
    restart: unless-stopped
